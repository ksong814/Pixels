
import turtle

# creates a turtle (pen) an sets the speed (where 0 is fastest and 10 is slowest)
# The colors can be set through their names or through hexadecimal codes, use hex for accuracy
myPen = turtle.Turtle()
myPen.speed(0)
myPen.color("#000000")
turtle.delay(0)
myPen.ht()


# setting out box sizes to the n sq pixels per box
boxSize = 10
 

# myPen.setheading(n) points pen to given angle direction.
# where n queals the angle.
# 0 points to the right, 90 to go up, 180 to go to the left, 270 to go down

# Positions myPen in top left area of the screen
# This should change according to the image size you want to make and the size of your boxes ("pixels")
# This canvas is currently set to 200*200 pixels or a 20x20 box of 10 sq pixels each
myPen.penup()
myPen.forward(-300)
myPen.setheading(90)
myPen.forward(300)
myPen.setheading(0) 

# This function draws a box by drawing each side of the square and using the fill function
def box(intDim):
    myPen.begin_fill()
    # 0 deg.
    myPen.forward(intDim)
    myPen.left(90)
    # 90 deg.
    myPen.forward(intDim)
    myPen.left(90)
    # 180 deg.
    myPen.forward(intDim)
    myPen.left(90)
    # 270 deg.
    myPen.forward(intDim)
    myPen.end_fill()
    myPen.setheading(0)  



# Tina ~ :) 
pallet_tina = ['#FFFFFF' , '#000000' , '#F4A460' , '#FFFF00' , '#00BFFF' , '#800000' , '#FF69B4']
				#white		#black		#beige		#yellow		#blue		#red		#pink
pixels_tina = [[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0]]
pixels_tina.append([0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0])
pixels_tina.append([0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0])
pixels_tina.append([0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,2,1,1,2,1,1,1,0,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,0,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,1,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,1,0,0,0,1,0,0,1,2,1,0,0,1,0,0,1,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,1,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0,0,0,1,2,2,1,0,0,0,0,1,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,1,2,2,2,2,1,1,1,1,1,0,0,0])
pixels_tina.append([0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,1,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,2,2,2,1,1,0,0,0])
pixels_tina.append([0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0,0])
pixels_tina.append([0,0,0,1,1,0,1,1,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,0,0,2,2,2,2,2,5,6,6,6,5,5,5,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,0,4,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,0,4,4,4,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,4,4,4,4,4,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,0,4,4,4,4,4,4,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,4,4,4,4,4,4,4,4,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,0,4,4,4,4,4,4,4,4,4,2,2,2,4,4,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0])
pixels_tina.append([0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0])


# David Bowie (56)

pallet_bowie = ['#FFFFFF' , '#D2691E' , '#FF8C00' , '#8B4513' , '#87CEEB' , '#FFE4E1' , '#D3D3D3' , '#FFC0CB' , '#F5DEB3']
				#white   	#chocolate   #orange     #brown		#blue		#rose		#gray		#pink		#gold...
pixels_bowie = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,3,3,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,]]
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,3,3,3,3,3,3,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,3,3,3,1,1,1,1,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,1,2,2,2,1,1,2,1,2,1,1,1,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,1,2,2,2,2,1,2,2,2,2,1,2,2,1,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,2,2,2,1,1,2,1,2,3,2,2,2,1,3,1,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,1,2,2,3,1,2,2,1,2,3,2,1,2,3,1,1,1,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,1,2,3,1,2,2,2,2,3,2,3,2,3,2,3,1,1,1,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,2,1,2,3,1,2,1,2,2,1,2,3,3,2,2,3,2,2,2,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,1,2,1,3,3,3,2,1,1,2,1,2,1,3,2,3,1,1,2,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,1,3,3,3,2,1,2,2,3,1,3,1,3,2,3,3,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,1,2,2,2,1,1,3,3,3,1,1,3,3,1,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,1,1,1,1,1,2,3,3,1,1,3,3,3,1,1,1,1,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,2,2,2,2,1,1,1,1,1,8,8,8,8,5,5,5,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,5,5,5,5,4,8,8,8,8,8,8,8,0,5,5,5,5,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,5,5,5,4,4,8,8,8,8,8,8,8,5,5,5,5,5,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,5,5,5,4,8,8,8,8,8,8,8,0,5,5,5,5,5,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,5,5,4,4,8,8,8,8,8,8,0,0,0,6,6,6,6,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,6,5,5,4,8,8,8,8,8,0,0,0,5,0,5,5,5,6,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,5,4,4,8,8,8,8,0,0,0,0,0,5,0,5,5,6,6,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,7,7,7,7,7,7,0,0,0,7,7,7,7,7,7,5,5,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,6,2,2,2,2,2,7,2,2,7,7,2,2,2,2,2,7,5,6,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,3,2,2,2,3,5,2,2,7,5,3,2,2,2,3,0,5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,3,3,3,8,2,2,0,7,0,0,3,3,3,0,0,5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,4,8,2,2,2,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,4,2,2,2,0,0,0,0,0,0,0,0,7,7,5,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,2,2,2,0,0,0,0,0,0,0,0,7,7,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,2,2,2,0,0,0,0,0,0,0,7,7,7,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,2,2,0,5,1,1,1,5,5,0,7,7,7,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,4,2,5,5,0,0,0,0,0,0,5,7,7,5,6,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,4,5,5,5,5,0,0,5,5,0,0,5,5,5,6,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,5,5,5,7,7,7,7,7,7,7,0,5,5,5,6,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,6,2,2,2,7,7,7,7,7,5,0,5,5,6,5,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,6,5,5,5,0,5,5,0,0,5,5,6,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,5,6,5,5,0,0,0,0,5,5,6,5,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,5,0,0,0,5,5,5,6,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,5,6,5,5,5,5,5,6,5,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,6,6,6,6,6,5,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,5,0,0,5,5,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,0,0,5,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,0,5,5,5,0,0,5,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,0,0,5,5,5,0,0,5,5,0,0,0,0,5,5,5,5,5,5,5,0,0,0,0,0,0])
pixels_bowie.append([0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,5,5,0,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0])
pixels_bowie.append([0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,5,5,0,0,0,5,5,5,5,0,5,0,0,0,0,0,0,0,0,5,5,5,0])
pixels_bowie.append([0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,0])
pixels_bowie.append([0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,0,5,0,5,5,5,5,5,5,5,5,5,0,0])
pixels_bowie.append([0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0])
pixels_bowie.append([0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5])
pixels_bowie.append([0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5])





# This function takes a pallet and pixel list (matrix) to draw the picture
def draw(pallet, pixels):
	myPen.setheading(0)
	for row in pixels: 
		for color in row:
			myPen.color(pallet[color])
			box(boxSize)
			myPen.forward(boxSize)
			myPen.penup()
		myPen.setheading(180)
		myPen.forward(len(row) * boxSize)
		myPen.setheading(270)
		myPen.forward(boxSize)
		myPen.setheading(0)



def main():
	
	print("'TINA' to draw Tina from Bob's Burgers")
	print("'BOWIE' to draw David Bowie")

	drawing = input("Enter which image to create: ")

	if drawing == 'TINA':
		draw(pallet_tina, pixels_tina)
	elif drawing == 'BOWIE':
		draw(pallet_bowie, pixels_bowie)
	else:
		print("Invalid option")

	# Need this to prevent window from closing!!!!
	turtle.done()

main()